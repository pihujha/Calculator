// Generated by CoffeeScript 1.12.7
(function() {
  var add, calculate, decimalToFraction, divide, exponent, logBase10, logBase2, math, multiply, nthRoot, readline, rl, square, squareRoot, subtract;

  readline = require('readline');

  math = require('mathjs');

  rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  add = function(a, b) {
    return a + b;
  };

  subtract = function(a, b) {
    return a - b;
  };

  multiply = function(a, b) {
    return a * b;
  };

  divide = function(a, b) {
    if (b !== 0) {
      return a / b;
    } else {
      return "Cannot divide by zero";
    }
  };

  exponent = function(a, b) {
    return Math.pow(a, b);
  };

  square = function(a) {
    return a * a;
  };

  squareRoot = function(a) {
    return Math.sqrt(a);
  };

  nthRoot = function(a, n) {
    return Math.pow(a, 1 / n);
  };

  logBase10 = function(a) {
    return Math.log10(a);
  };

  logBase2 = function(a) {
    return Math.log2(a);
  };

  decimalToFraction = function(decimal) {
    var fraction;
    fraction = math.fraction(decimal);
    return fraction.n + "/${fraction.d}";
  };

  calculate = function() {
    return rl.question("Enter first number: ", function(num1) {
      num1 = parseFloat(num1);
      return rl.question("Enter second number (if needed): ", function(num2) {
        num2 = parseFloat(num2);
        return rl.question("Enter operation (+, -, *, /, ^, sq, sqrt, nthroot, log10, log2, frac): ", function(operation) {
          var result;
          result = (function() {
            switch (operation) {
              case "+":
                return add(num1, num2);
              case "-":
                return subtract(num1, num2);
              case "*":
                return multiply(num1, num2);
              case "/":
                return divide(num1, num2);
              case "^":
                return exponent(num1, num2);
              case "sq":
                return square(num1);
              case "sqrt":
                return squareRoot(num1);
              case "nthroot":
                return nthRoot(num1, num2);
              case "log10":
                return logBase10(num1);
              case "log2":
                return logBase2(num1);
              case "frac":
                return decimalToFraction(num1);
              default:
                return "Invalid operation";
            }
          })();
          console.log("The result is: " + result);
          return rl.close();
        });
      });
    });
  };

  calculate();

}).call(this);
